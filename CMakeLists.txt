
cmake_minimum_required(VERSION 3.0.2)

project(CMakeRPathIllustration)

if(NOT DEFINED MY_CMAKE_DIR)
  set(MY_CMAKE_DIR "cmake")
endif()

if(NOT DEFINED MY_BIN_DIR)
  set(MY_BIN_DIR "bin")
endif()

if(NOT DEFINED MY_LIB_DIR)
  set(MY_LIB_DIR "lib/MyWorld")
endif()

if(NOT DEFINED MY_INCLUDE_DIR)
  set(MY_INCLUDE_DIR "include/${PROJECT_NAME}")
endif()

add_library(MyWorld SHARED MyWorld.cpp MyWorld.h)

set_target_properties(MyWorld PROPERTIES
  RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${MY_BIN_DIR}"
  LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${MY_LIB_DIR}"
  ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${MY_LIB_DIR}"
  )

install(TARGETS MyWorld
  RUNTIME DESTINATION ${MY_BIN_DIR} COMPONENT RuntimeLibraries
  LIBRARY DESTINATION ${MY_LIB_DIR} COMPONENT RuntimeLibraries
  ARCHIVE DESTINATION ${MY_LIB_DIR} COMPONENT Development
  )

add_executable(myexec main.cpp)
target_link_libraries(myexec MyWorld)

set_target_properties(myexec PROPERTIES
  RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${MY_BIN_DIR}"
  LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${MY_LIB_DIR}"
  ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${MY_LIB_DIR}"
  )

install(TARGETS myexec
  RUNTIME DESTINATION ${MY_BIN_DIR} COMPONENT RuntimeLibraries
  LIBRARY DESTINATION ${MY_LIB_DIR} COMPONENT RuntimeLibraries
  ARCHIVE DESTINATION ${MY_LIB_DIR} COMPONENT Development
  )

install(
  TARGETS MyWorld
  EXPORT  MyExport
  RUNTIME DESTINATION "${MY_BIN_DIR}"
  LIBRARY DESTINATION "${MY_LIB_DIR}"
  ARCHIVE DESTINATION "${MY_LIB_DIR}"
  PUBLIC_HEADER DESTINATION "${MY_INCLUDE_DIR}"
)

# Export the targets generated by the plugin
export(
  EXPORT MyExport
  FILE "${CMAKE_BINARY_DIR}/${MY_CMAKE_DIR}/${PROJECT_NAME}Targets.cmake")

install(
  EXPORT MyExport
  DESTINATION ${MY_CMAKE_DIR}
  FILE ${PROJECT_NAME}Targets.cmake
)
